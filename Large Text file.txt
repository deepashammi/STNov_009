References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with tep	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
PTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
vironment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
one
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress

Working On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start ProgressWorking On dshammi Help & Feedback 
CSRV
← Return to Dashboard
Overview
Todo
Milestones
Test Runs & Results
Test Suites & Cases
Reports
T1349168692
SCMLoader can process updates for revisions changing binary/large files 
SE7-FocusedReleaseTestPlan-WK2019.45 › CSRV Smoke Tests › CSRV-11281: Graph Storage: Multiple Revisions › CSRV-11361: SCMLoader can process updates for revisions changing binary/large files
Type
Smoke Tests	
Priority
4 - Must Test	
Estimate
None	
Milestone
None
References
CSRV-11361	
Status
Approved for Testing	
Generator
sbrotonel	
Reviewer
sbrotonel
Test Type
Manual Test	
Functional area
CSRV-11281		
Preconditions
*Pre-condition Item*	*Pre-condition information*	*Reference link to Arch doc or E2E with instructions* \\*(as applicable)*
Environment ^~(URL/IP etc.)~^	URLs used below have a placeholder for environment name {{\{env\}}}. For testing on any, just replace this placeholder with the environment name	Environment Documentation
HTTP Headers	All requests, unless otherwise specified, should set the following headers\\{noformat}\\Accept: application/json\\Content-Type: application/json\\{noformat}	
User Credentials	You need Neo4J credentials	https://confluence.devfactory.com/display/AURDF/Security+Roles+and+Privileges
Technology knowledge	You know how to query Neo4j	https://confluence.devfactory.com/display/AURDF/Querying+the+Graph+DB
Product specific knowledge	You know the graph model of DB	https://confluence.devfactory.com/display/AURDF/CS+Graph+Database+model
Data prerequisites ~^(if any)^~	* You have a repo on Github with a branch (let's call it {{B1}}) that has one binary file (image/PDF/zip file) (let's call it {{BF}} and one large text file (around 1.5MB) (let's call it {{LF}})\\** It's recommended to have a {{master}} branch with the required file, and branch {{B1}} should be created before running the test to be able to automate and rerun the test without making changes to original files	
* This repo/branch must be available in CodeCache. This can be done by onboarding any repo to CodeServer	CSRV-5705 (T1349173713)
* Same repo should be loaded to graph DB	CSRV-10890 (T1349168635)
* Your user should have write access to this Github repo	
* Repo on Github should be configured to call webhook with push events	CSRV-5430 (T1349169658)
* Repo should be cloned locally. All steps below assume you're working on local clone and checked out branch {{B1}}	
Test Steps
Step	Expected Result
1
Create the following git commits as described below, and push each of them individually:
* Edit contents of {{BF}} via an editor or replace with a different file with the same name, then do a git commit and a git push
* Delete {{BF}}, then do a git commit and a git push
* Edit contents of {{LF}} via a text editor, then do a git commit and a git push
* Delete {{LF}}, then do a git commit and a git push

Each git commit and git push should be executed successfully
All commits should be available in github
Take a note of the git commit hashes (you can use git log command or get them from github UI)
2
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that 5 Commit nodes are returned
Verify that the {{scmId}} property of those nodes match the hashes of the five commits (the one originally loaded and the 4 created in previous step
3
Cleanup the DB by executing the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"})
OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch)
OPTIONAL MATCH (directory:Directory)-[:IS_IN]->(branch)
OPTIONAL MATCH (file:File)-[:IS_IN]->(directory)
OPTIONAL MATCH (fileVersion:FileVersion)-[:IS_FOR]->(file)
DETACH DELETE repo, branch, commit, directory, file, fileVersion
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that it executes successfully

4
Run the following cypher query on Neo4J
{code}
MATCH(repo:Repo{url:"[REPO_URL]"})<-[:IS_OF]-(branch:Branch{name:"B1"}) OPTIONAL MATCH (commit:Commit)-[:IS_ON]->(branch) return repo, branch, commit
{code}
* Replace {{[REPO_URL]}} with the URL of the repo
* The above assumes that the name of the branch is {{B1}}. If it's different, replace it in query

Verify that no nodes are returned

Expected Result
Verify that no nodes are returned

description
As a user, I can see that new commits making changes to large or binary files are loaded automatically

Results & CommentsHistory & ContextDefects

10/610/710/810/910/1010/1110/1210/1310/1410/1510/1610/1710/1810/1910/2010/2110/2210/2310/2410/2510/2610/2710/2810/2910/3010/3111/111/211/311/411/50123456
In the past 30 days:
2 Passed
100% set to Passed
0 Blocked
0% set to Blocked
0 Retest
0% set to Retest
0 Failed
0% set to Failed
0 Passed(auto)
0% set to Passed(auto)
0 Failed(auto)
0% set to Failed(auto)
0 Skipped
0% set to Skipped
November 2019
Untested	T1349168692	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.45	SE7-ManualTestMilestone-WK2019.45		
October 2019
Passed	T1330428989	in CSRV Smoke Tests	SE7-FocusedReleaseTestPlan-WK2019.42	SE7-ManualTestMilestone-WK2019.42		Tested by sbrotonel
Passed	T1323309742	in CSRV-11361	CSRV-11361			Tested by sbrotonel
Add ResultAssign To		
Add Result
Add Comment or File
Assigned to you. Change

Progress
Start Progress